<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SpyGlass.Core"
             xmlns:h="http://helix-toolkit.org/wpf" 
             xmlns:f="clr-namespace:SpyGlass.Framework.Converters;assembly=SpyGlass.Framework"
             xmlns:g="clr-namespace:SpyGlass.Design.Wpf;assembly=SpyGlass.Design"
             x:Class="SpyGlass.Core.viewPort3dControl"
             mc:Ignorable="d" 
             d:DesignHeight="720" d:DesignWidth="884.057" Background="{DynamicResource Base200}" Foreground="{DynamicResource Body}" Margin="5">
    <UserControl.Resources>
        <ResourceDictionary>
            <f:BoolToOnOffConverter x:Key="OnOffConverter" />
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="260"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="262*"/>
            <ColumnDefinition Width="367*"/>
            <ColumnDefinition Width="255*"/>
        </Grid.ColumnDefinitions>

        <StackPanel Orientation="Vertical" Margin="20" >

            <StackPanel Orientation="Horizontal" Margin="5"  HorizontalAlignment="Left" VerticalAlignment="Top">
                <Label Content="SHIFT"  Margin="0,0,5,0"/>
                <ToggleButton x:Name="btnShift" FontSize="9" FontWeight="Bold"
                    Content="{Binding ShiftState, Converter={StaticResource OnOffConverter}}" 
                    Command="{Binding ChangeShiftStateCommand}" 
                    IsChecked="{Binding ShiftState}" />


            </StackPanel>
            <Border CornerRadius="3" Background="{DynamicResource Base300}" Padding="5" Margin="12,2,5,2">
                <StackPanel Orientation="Vertical"  >
                    <StackPanel Orientation="Horizontal">
                        <Label Content="EXPECTED COUNT" Width="140" Margin="0,0,5,0" />
                        <TextBox Text="{Binding ExpectedCount}" Width="50" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label Content="ACTUAL SHIFT COUNT" Width="140" Margin="0,0,5,0" />
                        <Label Content="50" Width="50" Margin="0,0,5,0" Foreground="{DynamicResource LimeGreen}" FontWeight="Bold"  />
                    </StackPanel>
                </StackPanel>
            </Border>

        </StackPanel>

        <StackPanel  Grid.Column="1" Margin="0,20,10,0" >
            <StackPanel Orientation="Horizontal" Margin="5"  HorizontalAlignment="Left" VerticalAlignment="Top">
                <Label Content="TRANSPORT"  Margin="0,0,5,0"/>
                <ToggleButton x:Name="btnTransport" 
                              Content="{Binding TransportState, Converter={StaticResource OnOffConverter}}" 
                              Command="{Binding ChangeTransportStateCommand}" 
                              CommandParameter="{Binding TransportState}" 
                              IsChecked="{Binding TransportState}" />


            </StackPanel>
            <Border CornerRadius="3" Background="{DynamicResource Base300}" Padding="5" Margin="12,2,5,2">
                <StackPanel>
                    <StackPanel Orientation="Horizontal"  HorizontalAlignment="Left" VerticalAlignment="Top">
                        <Label Content="Feed Scan Motor" Width="120"  Margin="0,0,5,0"/>
                        <ToggleButton x:Name="btnFeedScanMotor" 
                                       Content="{Binding FeedScanMotorState, Converter={StaticResource OnOffConverter}}" 
                                       Command="{Binding ChangeFeedScanMotorStateCommand}" 
                                       CommandParameter="{Binding FeedScanMotorState}" 
                                       IsChecked="{Binding FeedScanMotorState}" />

                        <Label Content="SPEED"/>
                        <TextBox Text="{Binding FeedScanSpeedUser, FallbackValue=15}" Width="30" Foreground="{DynamicResource LimeGreen}" FontWeight="Bold"/>
                        <Label Content="ACTUAL"/>
                        <TextBox Text="{Binding FeedScanSpeedActual, FallbackValue=0}" Width="30" 
                                     IsReadOnly="True" Foreground="{DynamicResource LimeGreen}"
                                     FontWeight="Bold"
                                     />
                    </StackPanel>

                    <StackPanel Orientation="Horizontal"  HorizontalAlignment="Left" VerticalAlignment="Top">
                        <Label Content="Shreder Motor" Width="120"  Margin="0,0,5,0"/>
                        <ToggleButton x:Name="btnShredderMotor" 
                                          Content="{Binding ShredderMotorState, Converter={StaticResource OnOffConverter}}" 
                                          Command="{Binding ChangeShredderMotorStateCommand}" 
                                          CommandParameter="{Binding ShredderMotorState}" 
                                          IsChecked="{Binding ShredderMotorState}" />

                        <Label Content="SPEED"/>
                        <TextBox Text="{Binding FeedScanSpeedUser, FallbackValue=15}" Width="30" Foreground="{DynamicResource LimeGreen}" FontWeight="Bold"/>
                        <Label Content="ACTUAL"/>
                        <TextBox Text="{Binding FeedScanSpeedActual, FallbackValue=0}" Width="30" 
                                     IsReadOnly="True" Foreground="{DynamicResource LimeGreen}"
                                     FontWeight="Bold"
                            />
                    </StackPanel>

                    <StackPanel Orientation="Horizontal"  HorizontalAlignment="Left" VerticalAlignment="Top">
                        <Label Content="Output Motor" Width="120"  Margin="0,0,5,0"/>
                        <ToggleButton x:Name="btnOutputMotor" 
                                          Content="{Binding OutputMotorState, Converter={StaticResource OnOffConverter}}" 
                                          Command="{Binding ChangeOutputMotorStateCommand}" 
                                          CommandParameter="{Binding OutputMotorState}" 
                                          IsChecked="{Binding OutputrMotorState}" />

                        <Label Content="SPEED"/>
                        <TextBox Text="{Binding FeedScanSpeedUser, FallbackValue=15}" Width="30" Foreground="{DynamicResource LimeGreen}" FontWeight="Bold"/>
                        <Label Content="ACTUAL"/>
                        <TextBox Text="{Binding FeedScanSpeedActual, FallbackValue=0}" Width="30" 
                                     IsReadOnly="True" Foreground="{DynamicResource LimeGreen}"
                                     FontWeight="Bold"
                            />
                    </StackPanel>
                </StackPanel>
            </Border>
        </StackPanel>


        <StackPanel Orientation="Vertical" Grid.Column="2" Margin="0,20,0,0" >
            <StackPanel Orientation="Horizontal" Margin="5"  HorizontalAlignment="Left" VerticalAlignment="Top">
                <Label Content="SINGLER"   Margin="0,0,5,0"/>
                <ToggleButton x:Name="btnSingler" 
                              Content="{Binding SinglertState, Converter={StaticResource OnOffConverter}}" 
                              Command="{Binding ChangeSinglerStateCommand}" 
                              CommandParameter="{Binding SinglerState}" 
                              IsChecked="{Binding SinglerState}" />


            </StackPanel>

            <Border CornerRadius="3" Background="{DynamicResource Base300}" Padding="5" Margin="12,2,5,2" Grid.Column="2">
                <StackPanel Orientation="Vertical">
                    <StackPanel Orientation="Horizontal" Margin="5"  HorizontalAlignment="Left" VerticalAlignment="Top">
                        <Label Content="VACUUM" Width="130" Margin="0,0,5,0"/>
                        <ToggleButton x:Name="btnVacuum" 
                              Content="{Binding VacuumState, Converter={StaticResource OnOffConverter}}" 
                              Command="{Binding ChangeVacuumStateCommand}" 
                              CommandParameter="{Binding VacuumState}" 
                              IsChecked="{Binding VacuumState}" />


                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="5"  HorizontalAlignment="Left" VerticalAlignment="Top">
                        <Label Content="FEED VALVE" Width="130" Margin="0,0,5,0"/>
                        <ToggleButton x:Name="btnFeedValve" 
                              Content="{Binding FeedValveState, Converter={StaticResource OnOffConverter}}" 
                              Command="{Binding ChangeFeedValveStateCommand}" 
                              CommandParameter="{Binding FeedValveState}" 
                              IsChecked="{Binding FeedValveState}" />


                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="5"  HorizontalAlignment="Left" VerticalAlignment="Top">
                        <Label Content="MANIFOLD BLOWER" Width="130" Margin="0,0,5,0"/>
                        <ToggleButton x:Name="btnManifoldBlower" 
                              Content="{Binding ManifoldBlowerState, Converter={StaticResource OnOffConverter}}" 
                              Command="{Binding ManifoldBlowerStateCommand}" 
                              CommandParameter="{Binding ManifoldBlowerState}" 
                              IsChecked="{Binding ManifoldBlowerState}" />


                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="5"  HorizontalAlignment="Left" VerticalAlignment="Top">
                        <Label Content="AIR VALVE" Width="130" Margin="0,0,5,0"/>
                        <ToggleButton x:Name="btnAirValve" 
                              Content="{Binding AirValveState, Converter={StaticResource OnOffConverter}}" 
                              Command="{Binding AirValveStateCommand}" 
                              CommandParameter="{Binding AirValveState}" 
                              IsChecked="{Binding AirValveState}" />


                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="5"  HorizontalAlignment="Left" VerticalAlignment="Top">
                        <Label Content="PADDLE MOTOR" Width="130" Margin="0,0,5,0"/>
                        <ToggleButton x:Name="btnPaddleMotor" 
                              Content="{Binding PaddleMotorState, Converter={StaticResource OnOffConverter}}" 
                              Command="{Binding PaddleMotorCommand}" 
                              CommandParameter="{Binding PaddleMotorState}" 
                              IsChecked="{Binding PaddleMotorState}" />


                    </StackPanel>
                </StackPanel>
            </Border>
        </StackPanel>
       
                <Grid Grid.ColumnSpan="3"  Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="3"/>
                    <RowDefinition Height="23*"/>
                </Grid.RowDefinitions>
             
                <Grid Grid.Row="1" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="147*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="102*"/>
                        <ColumnDefinition Width="109*"/>
                    </Grid.ColumnDefinitions>

                    <Label Content="SENDER (Sentinel) Generated Events" />
                    <Label Content="RECEIVER (GUI) Generated Events" Grid.Column="1" Grid.Row="0" />

                    <ListView Grid.Row="1" Grid.Column="0" FontSize="9"
                              VerticalAlignment="Stretch" 
                              HorizontalAlignment="Stretch" 
                              ItemsSource="{Binding SenderEvents}"/>
                    <ListView Grid.Row="1" Grid.Column="1" FontSize="9"
                              VerticalAlignment="Stretch" 
                              HorizontalAlignment="Stretch" 
                              ItemsSource="{Binding ReceiverEvents}"/>
                </Grid>
            </Grid>
           
        
    </Grid>
</UserControl>
